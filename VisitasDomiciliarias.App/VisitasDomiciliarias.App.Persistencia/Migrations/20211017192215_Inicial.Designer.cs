// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisitasDomiciliarias.App.Persistencia;

namespace VisitasDomiciliarias.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211017192215_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("HistoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoAnimo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaVisita")
                        .HasColumnType("datetime2");

                    b.Property<int>("FrecCardiaca")
                        .HasColumnType("int");

                    b.Property<int>("FrecRespiratoria")
                        .HasColumnType("int");

                    b.Property<int>("MascotaId")
                        .HasColumnType("int");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Recomendaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double>("Temperatura")
                        .HasColumnType("float");

                    b.Property<int>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("HistoriaId");

                    b.HasIndex("MascotaId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("MascotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Edad")
                        .HasColumnType("float");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PropietarioId")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("MascotaId");

                    b.HasIndex("PropietarioId");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.MascotaVeterinario", b =>
                {
                    b.Property<int>("MascotaId")
                        .HasColumnType("int");

                    b.Property<int>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("MascotaId", "VeterinarioId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("MascotaVeterinarios");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Propietario", b =>
                {
                    b.Property<int>("PropietarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PropietarioId");

                    b.ToTable("Propietarios");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Veterinario", b =>
                {
                    b.Property<int>("VeterinarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TarjProfesional")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("VeterinarioId");

                    b.ToTable("Veterinarios");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasOne("VisitasDomiciliarias.App.Dominio.Mascota", "Mascota")
                        .WithMany("Visita")
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisitasDomiciliarias.App.Dominio.Veterinario", "Veterinario")
                        .WithMany("Visitas")
                        .HasForeignKey("VeterinarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Mascota", b =>
                {
                    b.HasOne("VisitasDomiciliarias.App.Dominio.Propietario", "Propietario")
                        .WithMany("Mascotas")
                        .HasForeignKey("PropietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.MascotaVeterinario", b =>
                {
                    b.HasOne("VisitasDomiciliarias.App.Dominio.Mascota", "Mascota")
                        .WithMany("Veterinarios")
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisitasDomiciliarias.App.Dominio.Veterinario", "Veterinario")
                        .WithMany("Mascotas")
                        .HasForeignKey("VeterinarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Mascota", b =>
                {
                    b.Navigation("Veterinarios");

                    b.Navigation("Visita");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Propietario", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Veterinario", b =>
                {
                    b.Navigation("Mascotas");

                    b.Navigation("Visitas");
                });
#pragma warning restore 612, 618
        }
    }
}
